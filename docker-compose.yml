version: '3.8'
services:
  discovery-service-microservice:
    container_name: discovery-service-microservice
    build:
      context: discovery-service
      dockerfile: Dockerfile
    image: discovery-service-microservice:1.0
    ports:
      - "8761:8761"
    expose:
      - "8761"

  config-server-microservice:
    container_name: config-server-microservice
    build:
      context: config-server
      dockerfile: Dockerfile
    image: config-server-microservice:1.0
    ports:
      - "9991:6661"
    expose:
      - "6661"
    links:
      - "discovery-service-microservice"
    depends_on:
      - discovery-service-microservice
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service-microservice:8761/eureka
      #- DEUREKA_SERVER=http://discovery-service-microservice:8761/eureka


  auth-service-microservice:
    container_name: auth-service-microservice
    build:
      context: auth-service
      dockerfile: Dockerfile
    image: auth-service-microservice:1.0
    ports:
      - "9993:6663"
    expose:
      - "6663"
    links:
      - "discovery-service-microservice"
    depends_on:
      - discovery-service-microservice
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service-microservice:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server-microservice:6661


  banking-institutions-microservice:
    container_name: banking-institutions-microservice
    build:
      context: banking-institutions-api
      dockerfile: Dockerfile
    image: banking-institutions-microservice:1.0
    ports:
      - "9994:6664"
    expose:
      - "6664"
    links:
      - "discovery-service-microservice"
    depends_on:
      - discovery-service-microservice
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service-microservice:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server-microservice:6661


  ebanking-microservice:
    container_name: ebanking-microservice
    build:
      context: ebanking-api
      dockerfile: Dockerfile
    image: ebanking-microservice:1.0
    ports:
      - "9995:6665"
    expose:
      - "6665"
    links:
      - "discovery-service-microservice"
      - "banking-institutions-microservice"
    depends_on:
      - discovery-service-microservice
      - banking-institutions-microservice
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service-microservice:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server-microservice:6661


  api-gateway-microservice:
    container_name: api-gateway-microservice
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: api-gateway-microservice:1.0
    ports:
      - "9992:6662"
    expose:
      - "6662"
    links:
      - "discovery-service-microservice"
    depends_on:
      - discovery-service-microservice
      - auth-service-microservice
      - banking-institutions-microservice
      - ebanking-microservice
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service-microservice:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server-microservice:6661


  db:
    container_name: db
    image: postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data


  sonarqube:
    container_name: sonarqube
    image: sonarqube
    ports:
      - "9000:9000"
    expose:
      - "90000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

networks:
  default:
    name: ebanking-network
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data: